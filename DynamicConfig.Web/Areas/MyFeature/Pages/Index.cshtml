@page "{app}"
@using DynamicConfig.Models
@model IndexModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Dynamic Config";
}

<style>
    :root {
        --bg: #ffffff;
        --panel: #ffffff;
        --text: #111827;
        --muted: #6b7280;
        --brand: #6366f1;
        --brand2: #7c3aed;
        --border: #e5e7eb;
        --thead: #f8fafc;
        --hover: #f9fafb;
        --chip: #f1f5f9;
    }

    * {
        box-sizing: border-box
    }

    body {
        margin: 0;
        background: var(--bg);
        color: var(--text);
        font: 14px/1.5 system-ui,-apple-system,Segoe UI,Roboto,sans-serif
    }

    .container {
        max-width: 1200px;
        margin: 24px auto;
        padding: 0 16px
    }

    .header {
        display: flex;
        gap: 12px;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 16px
    }

    .title {
        font-size: 24px;
        font-weight: 700
    }

    .sub {
        color: var(--muted);
        font-size: 12px
    }

    .card {
        background: var(--panel);
        border: 1px solid var(--border);
        border-radius: 16px;
        padding: 16px;
        box-shadow: 0 10px 30px rgba(0,0,0,.06);
        margin-bottom: 16px
    }

    .row {
        display: flex;
        gap: 12px;
        align-items: center
    }

    .spacer {
        flex: 1
    }

    .stack {
        display: flex;
        flex-direction: column;
        gap: 10px
    }

    .stack-row {
        display: flex;
        gap: 10px;
        flex-wrap: wrap
    }

    .input, .select, .btn, textarea {
        border: 1px solid var(--border);
        background: #fff;
        color: var(--text);
        border-radius: 12px;
        padding: 10px 12px;
        outline: none;
    }

        .input:focus, .select:focus, textarea:focus {
            border-color: var(--brand);
            box-shadow: 0 0 0 3px rgba(99,102,241,.25)
        }

    .btn {
        cursor: pointer;
        font-weight: 600;
        transition: .15s transform,.15s filter
    }

        .btn:hover {
            filter: brightness(1.03);
            transform: translateY(-1px)
        }

    .btn-primary {
        background: linear-gradient(90deg,var(--brand),var(--brand2));
        border-color: transparent;
        color: #fff
    }

    .btn-danger {
        background: linear-gradient(90deg,#f43f5e,#ef4444);
        border-color: transparent;
        color: #fff
    }

    .pill {
        padding: 4px 10px;
        border-radius: 999px;
        border: 1px solid var(--border);
        color: var(--muted)
    }

    table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
        overflow: hidden;
        border-radius: 12px
    }

    thead th {
        text-align: left;
        font-size: 12px;
        color: #475569;
        padding: 12px;
        background: var(--thead);
        border-bottom: 1px solid var(--border)
    }

    tbody td {
        padding: 12px;
        border-bottom: 1px solid var(--border)
    }

    tbody tr:hover {
        background: var(--hover)
    }

    .label {
        font-size: 12px;
        color: var(--muted)
    }

    .tag {
        font-size: 12px;
        padding: 3px 8px;
        border-radius: 999px;
        border: 1px solid var(--border);
        background: var(--chip)
    }
</style>

<div class="container">

    <div class="header">
        <div>
            <div class="title">Dynamic Config — @Model.App</div>
        </div>

    </div>

    <!-- CREATE -->
    <div class="card">
        <h3 style="margin:6px 0 12px 0;">Create</h3>

        <form method="post" asp-page-handler="Create" asp-route-app="@Model.App" class="row" style="flex-wrap:wrap">
            @Html.AntiForgeryToken()
            <input type="hidden" name="app" value="@Model.App" />

            <div style="flex:1; min-width:220px">
                <div class="label">Name</div>
                <input class="input" name="Name" required maxlength="256" placeholder="Örn: SiteName" />
            </div>

            <div style="flex:1; min-width:180px">
                <div class="label">Type</div>
                <input class="input" name="Type" list="cfg-types" placeholder="string | int | double | bool" required />
            </div>

            <div style="flex:1; min-width:220px">
                <div class="label">Value</div>
                <input class="input" name="Value" placeholder="Örn: 1" />
            </div>

          @*   <label class="row" style="gap:8px">
                <input type="checkbox" name="IsActive" value="true" checked />
                <span>IsActive</span>
            </label> *@

            <span class="spacer"></span>
            <button type="submit" class="btn btn-primary">Ekle</button>
        </form>

    </div>

    <!-- LIST + EDIT -->
    <div class="card">
        <div class="row" style="margin-bottom:10px">
            <input id="search" class="input" style="width:90%" type="text" placeholder="İsme göre filtrele..." />
            <span class="pill">Total: @Model.Items.Count</span>
        </div>

        <div style="overflow:auto; max-height:60vh;">
            <table>
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Value</th>
                        <th>Active</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="cfgBody">
                    @foreach (var c in (Model?.Items ?? new List<Config>()))
                    {
                        <tr>
                            <td class="col-name">@c.Name</td>
                            <td><span class="tag">@c.Type</span></td>
                            <td><code>@c.Value</code></td>
                            <td>@(c.IsActive ? "✔" : "✖")</td>
                            <td>
                                <details>
                                    <summary>Edit</summary>
                                    <div class="stack" style="margin-top:10px">

                                        <!-- UPDATE -->

                                        <form method="post" asp-page-handler="Update" asp-route-app="@(Model?.App ?? string.Empty)" class="stack">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="app" value="@(Model?.App ?? string.Empty)" />
                                            <input type="hidden" name="Id" value="@c.Id" />

                                            <div class="stack-row">
                                                <div style="flex:1">
                                                    <div class="label">Name</div>
                                                    <input class="input" name="Name" value="@c.Name" />
                                                </div>
                                                <div style="flex:1">
                                                    <div class="label">Type</div>
                                                    <!-- Serbest yaz + öneri, mevcut değerle -->
                                                    <input class="input" name="Type" list="cfg-types" value="@c.Type" />
                                                </div>
                                              
                                                <div style="flex:1">
                                                    <div class="label">Value</div>
                                                    <input class="input" name="Value" value="@c.Value" />
                                                </div>

                                                <div>
                                                    <div class="label">IsActive</div>
                                                    <!-- GİZLİ FALSE'u KALDIRDIK; sadece checkbox -->
                                                    @if (c.IsActive)
                                                    {
                                                        <input type="checkbox" name="IsActive" value="true" checked="checked" />
                                                    }
                                                    else
                                                    {
                                                        <input type="checkbox" name="IsActive" value="true" />
                                                    }
                                                </div>
                                            </div>

                                            <div class="row">
                                                <button type="submit" class="btn btn-primary">Save</button>
                                            </div>
                                        </form>

                                        <!-- DELETE -->
                                        <form method="post" asp-page-handler="Delete" asp-route-app="@(Model?.App ?? string.Empty)" onsubmit="return confirm('Silinsin mi?');" class="row">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="app" value="@(Model?.App ?? string.Empty)" />
                                            <input type="hidden" name="id" value="@c.Id" />
                                            <button type="submit" class="btn btn-danger">Delete</button>
                                        </form>

                                    </div>
                                </details>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

</div>

<script>
    // basit filtre
    const q = document.getElementById('search');
    const rows = () => document.querySelectorAll('#cfgBody tr');
    if (q) q.addEventListener('input', () => {
      const needle = q.value.toLowerCase().trim();
      rows().forEach(tr => {
        const nameCell = tr.querySelector('.col-name');
        const hit = nameCell && nameCell.textContent.toLowerCase().includes(needle);
        tr.style.display = hit ? '' : 'none';
      });
    });
</script>
